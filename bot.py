import asyncio
import logging
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ConversationHandler
from config import BOT_TOKEN
from services.database import init_db
from handlers import (
    handle_reading, handle_reading_confirmation,
    handle_video, handle_video_confirmation,
    handle_product, handle_meeting, handle_call,
    handle_steps, handle_education, handle_mentor, handle_team_progress,
    AWAITING_READING_CONFIRMATION, AWAITING_VIDEO_CONFIRMATION,
    AWAITING_PRODUCT_CONFIRMATION, AWAITING_MEETING_CONFIRMATION,
    AWAITING_CALL_CONFIRMATION
)
from services.notifications import schedule_daily_reminders

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update, context):
    await update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å–∏—Å—Ç–µ–º—ã "–ü—É—Ç—å –º–∞—Å—Ç–µ—Ä–∞ Atomy".\n\n'
        '–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–∞.\n\n'
        '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
        '/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n'
        '/tracker - –æ—Ç–∫—Ä—ã—Ç—å —Ç—Ä–µ–∫–µ—Ä –ø—Ä–∏–≤—ã—á–µ–∫\n'
        '/steps - —Å–∏—Å—Ç–µ–º–∞ 8 —à–∞–≥–æ–≤\n'
        '/education - –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n'
        '/mentor - –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞\n'
        '/progress - –º–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å'
    )

async def handle_progress(update, context):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        user = get_user(session, user_id)
        
        if user:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            stats = get_user_progress_stats(session, user_id)
            
            await update.message.reply_text(
                f"üìä –¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å:\n\n"
                f"–£—Ä–æ–≤–µ–Ω—å: {user.level}\n"
                f"–ö–≤–∞–Ω—Ç–æ–≤: {user.quantum_balance}\n"
                f"–ü—Ä–∏–≤—ã—á–µ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {stats.get('total_habits', 0)}\n"
                f"–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è: {stats.get('current_streak', 0)} –¥–Ω–µ–π"
            )
        else:
            await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è —Å –ø–æ–º–æ—â—å—é /start")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_progress: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.")
    finally:
        session.close()

async def cancel(update, context):
    await update.message.reply_text('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.')
    return ConversationHandler.END

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = ApplicationBuilder().token(BOT_TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler('start', start))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /progress
    application.add_handler(CommandHandler('progress', handle_progress))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—Ä–µ–∫–µ—Ä–∞ –ø—Ä–∏–≤—ã—á–µ–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ConversationHandler
    tracker_conv_handler = ConversationHandler(
        entry_points=[CommandHandler('tracker', handle_reading)],
        states={
            AWAITING_READING_CONFIRMATION: [
                MessageHandler(filters.TEXT & filters.Regex('^‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–µ–Ω–∏–µ$'), handle_reading_confirmation)
            ],
            AWAITING_VIDEO_CONFIRMATION: [
                MessageHandler(filters.TEXT & filters.Regex('^‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä$'), handle_video_confirmation)
            ],
            # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )
    application.add_handler(tracker_conv_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è 8 —à–∞–≥–æ–≤
    application.add_handler(CommandHandler('steps', handle_steps))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–±—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    application.add_handler(CommandHandler('education', handle_education))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤
    application.add_handler(CommandHandler('mentor', handle_mentor))
    application.add_handler(CommandHandler('team_progress', handle_team_progress))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    loop = asyncio.get_event_loop()
    loop.create_task(schedule_daily_reminders())
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == '__main__':
    main()