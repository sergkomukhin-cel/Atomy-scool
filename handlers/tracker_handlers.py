from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler, MessageHandler, filters
from services.database import get_db_session, get_user, create_user, update_user_progress, update_user_quantum
from config import QUANTUMS_FOR_HABITS
import logging

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
AWAITING_READING_CONFIRMATION, AWAITING_VIDEO_CONFIRMATION, AWAITING_PRODUCT_CONFIRMATION, AWAITING_MEETING_CONFIRMATION, AWAITING_CALL_CONFIRMATION = range(5)

async def handle_reading(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        user = get_user(session, user_id)
        
        if not user:
            user = create_user(session, user_id, update.effective_user.username, 
                              update.effective_user.first_name, update.effective_user.last_name)
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∫–Ω–∏–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞ - —Ä–µ–∞–ª–∏–∑—É–µ–º –ø–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–æ—Å–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
        book_title = "–î—É–º–∞–π –∏ –±–æ–≥–∞—Ç–µ–π"
        book_quote = "–ß—Ç–æ —Ä–∞–∑—É–º —á–µ–ª–æ–≤–µ–∫–∞ –º–æ–∂–µ—Ç –ø–æ—Å—Ç–∏–≥–Ω—É—Ç—å –∏ –≤–æ —á—Ç–æ –º–æ–∂–µ—Ç –ø–æ–≤–µ—Ä–∏—Ç—å, —Ç–æ–≥–æ –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω –∏ –¥–æ—Å—Ç–∏—á—å."
        
        await update.message.reply_text(
            f"üìñ –°–µ–≥–æ–¥–Ω—è –¥–ª—è —Ä–æ—Å—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é: {book_title}\n\n"
            f"{book_quote}\n\n"
            f"–ü—Ä–æ—á–∏—Ç–∞–ª 15-30 –º–∏–Ω—É—Ç?",
            reply_markup=ReplyKeyboardMarkup([["‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–µ–Ω–∏–µ"]], one_time_keyboard=True)
        )
        
        return AWAITING_READING_CONFIRMATION
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_reading: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_reading_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_user_progress(session, user_id, 'reading')
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –∫–≤–∞–Ω—Ç—ã
        update_user_quantum(session, user_id, QUANTUMS_FOR_HABITS['reading'])
        
        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ! +{QUANTUMS_FOR_HABITS['reading']} –∫–≤–∞–Ω—Ç–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
        return ConversationHandler.END
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_reading_confirmation: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —á—Ç–µ–Ω–∏—è.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        user = get_user(session, user_id)
        
        if not user:
            user = create_user(session, user_id, update.effective_user.username, 
                              update.effective_user.first_name, update.effective_user.last_name)
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–∏–¥–µ–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        video_title = "–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞ –≤ Atomy"
        video_url = "https://youtube.com/watch?v=example"
        
        await update.message.reply_text(
            f"üé• –°–µ–≥–æ–¥–Ω—è –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è: {video_title}\n\n"
            f"–°—Å—ã–ª–∫–∞: {video_url}\n\n"
            f"–ü–æ—Å–º–æ—Ç—Ä–µ–ª –≤–∏–¥–µ–æ?",
            reply_markup=ReplyKeyboardMarkup([["‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä"]], one_time_keyboard=True)
        )
        
        return AWAITING_VIDEO_CONFIRMATION
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_video: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_video_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_user_progress(session, user_id, 'video')
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –∫–≤–∞–Ω—Ç—ã
        update_user_quantum(session, user_id, QUANTUMS_FOR_HABITS['video'])
        
        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ! +{QUANTUMS_FOR_HABITS['video']} –∫–≤–∞–Ω—Ç–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
        return ConversationHandler.END
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_video_confirmation: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
        return ConversationHandler.END
    finally:
        session.close()

# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å–æ–∑–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–≤—ã—á–µ–∫ (product, meeting, call)
# –î–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞ –ø–æ–∫–∞–∂—É —Ç–æ–ª—å–∫–æ –∑–∞–≥–ª—É—à–∫–∏

async def handle_product(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–∑–∂–µ.")
    return ConversationHandler.END

async def handle_meeting(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –≤—Å—Ç—Ä–µ—á –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–∑–∂–µ.")
    return ConversationHandler.END

async def handle_call(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–∑–∂–µ.")
    return ConversationHandler.END