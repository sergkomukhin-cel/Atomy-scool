from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler, MessageHandler, filters
from services.database import get_db_session, get_user, create_user, update_user_progress, update_user_quantum
from config import QUANTUMS_FOR_HABITS
import logging

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
AWAITING_READING_CONFIRMATION, AWAITING_VIDEO_CONFIRMATION, AWAITING_PRODUCT_CONFIRMATION, AWAITING_MEETING_CONFIRMATION, AWAITING_CALL_CONFIRMATION = range(5)

async def handle_tracker(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç—Ä–µ–∫–µ—Ä–∞"""
    await update.message.reply_text(
        "üìã –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–≤—ã—á–∫—É –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏:\n\n"
        "üìñ –ß—Ç–µ–Ω–∏–µ (15-30 –º–∏–Ω)\n"
        "üé• –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ\n"
        "üß¥ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞\n"
        "ü§ù –ü–æ—Å–µ—â–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á\n"
        "üìû –ó–≤–æ–Ω–∫–∏/–≤—Å—Ç—Ä–µ—á–∏",
        reply_markup=ReplyKeyboardMarkup([
            ["üìñ –ß—Ç–µ–Ω–∏–µ", "üé• –í–∏–¥–µ–æ"],
            ["üß¥ –ü—Ä–æ–¥—É–∫—Ç", "ü§ù –í—Å—Ç—Ä–µ—á–∏"],
            ["üìû –ó–≤–æ–Ω–∫–∏"]
        ], one_time_keyboard=True)
    )

async def handle_reading(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        user = get_user(session, user_id)
        
        if not user:
            user = create_user(session, user_id, update.effective_user.username, 
                              update.effective_user.first_name, update.effective_user.last_name)
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∫–Ω–∏–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        book_title = "–î—É–º–∞–π –∏ –±–æ–≥–∞—Ç–µ–π"
        book_quote = "–ß—Ç–æ —Ä–∞–∑—É–º —á–µ–ª–æ–≤–µ–∫–∞ –º–æ–∂–µ—Ç –ø–æ—Å—Ç–∏–≥–Ω—É—Ç—å –∏ –≤–æ —á—Ç–æ –º–æ–∂–µ—Ç –ø–æ–≤–µ—Ä–∏—Ç—å, —Ç–æ–≥–æ –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω –∏ –¥–æ—Å—Ç–∏—á—å."
        
        await update.message.reply_text(
            f"üìñ –°–µ–≥–æ–¥–Ω—è –¥–ª—è —Ä–æ—Å—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é: {book_title}\n\n"
            f"{book_quote}\n\n"
            f"–ü—Ä–æ—á–∏—Ç–∞–ª 15-30 –º–∏–Ω—É—Ç?",
            reply_markup=ReplyKeyboardMarkup([["‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–µ–Ω–∏–µ"]], one_time_keyboard=True)
        )
        
        return AWAITING_READING_CONFIRMATION
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_reading: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_reading_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_user_progress(session, user_id, 'reading')
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –∫–≤–∞–Ω—Ç—ã
        update_user_quantum(session, user_id, QUANTUMS_FOR_HABITS['reading'])
        
        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ! +{QUANTUMS_FOR_HABITS['reading']} –∫–≤–∞–Ω—Ç–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
        return ConversationHandler.END
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_reading_confirmation: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —á—Ç–µ–Ω–∏—è.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        user = get_user(session, user_id)
        
        if not user:
            user = create_user(session, user_id, update.effective_user.username, 
                              update.effective_user.first_name, update.effective_user.last_name)
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–∏–¥–µ–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        video_title = "–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞ –≤ Atomy"
        video_url = "https://youtube.com/watch?v=example"
        
        await update.message.reply_text(
            f"üé• –°–µ–≥–æ–¥–Ω—è –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è: {video_title}\n\n"
            f"–°—Å—ã–ª–∫–∞: {video_url}\n\n"
            f"–ü–æ—Å–º–æ—Ç—Ä–µ–ª –≤–∏–¥–µ–æ?",
            reply_markup=ReplyKeyboardMarkup([["‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä"]], one_time_keyboard=True)
        )
        
        return AWAITING_VIDEO_CONFIRMATION
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_video: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_video_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_user_progress(session, user_id, 'video')
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –∫–≤–∞–Ω—Ç—ã
        update_user_quantum(session, user_id, QUANTUMS_FOR_HABITS['video'])
        
        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ! +{QUANTUMS_FOR_HABITS['video']} –∫–≤–∞–Ω—Ç–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
        return ConversationHandler.END
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_video_confirmation: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_product(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        user = get_user(session, user_id)
        
        if not user:
            user = create_user(session, user_id, update.effective_user.username, 
                              update.effective_user.first_name, update.effective_user.last_name)
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        product_name = "Atomy HemoHIM"
        product_description = "–ü–æ–≤—ã—à–∞–µ—Ç –∏–º–º—É–Ω–∏—Ç–µ—Ç –∏ —É–ª—É—á—à–∞–µ—Ç –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è"
        
        await update.message.reply_text(
            f"üß¥ –°–µ–≥–æ–¥–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å: {product_name}\n\n"
            f"{product_description}\n\n"
            f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø—Ä–æ–¥—É–∫—Ç —Å–µ–≥–æ–¥–Ω—è?",
            reply_markup=ReplyKeyboardMarkup([["‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ"]], one_time_keyboard=True)
        )
        
        return AWAITING_PRODUCT_CONFIRMATION
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_product: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_product_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_user_progress(session, user_id, 'product')
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –∫–≤–∞–Ω—Ç—ã
        update_user_quantum(session, user_id, QUANTUMS_FOR_HABITS['product'])
        
        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ! +{QUANTUMS_FOR_HABITS['product']} –∫–≤–∞–Ω—Ç–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
        return ConversationHandler.END
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_product_confirmation: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_meeting(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        user = get_user(session, user_id)
        
        if not user:
            user = create_user(session, user_id, update.effective_user.username, 
                              update.effective_user.first_name, update.effective_user.last_name)
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å—Ç—Ä–µ—á–∞—Ö
        await update.message.reply_text(
            "ü§ù –ü–æ—Å–µ—â–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á –∏ —Å–µ–º–∏–Ω–∞—Ä–æ–≤\n\n"
            "–ö–∞–∫–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –≤—ã –ø–æ—Å–µ—Ç–∏–ª–∏ —Å–µ–≥–æ–¥–Ω—è?",
            reply_markup=ReplyKeyboardMarkup([["‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ—Å–µ—â–µ–Ω–∏–µ"]], one_time_keyboard=True)
        )
        
        return AWAITING_MEETING_CONFIRMATION
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_meeting: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_meeting_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_user_progress(session, user_id, 'meeting')
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –∫–≤–∞–Ω—Ç—ã
        update_user_quantum(session, user_id, QUANTUMS_FOR_HABITS['meeting'])
        
        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ! +{QUANTUMS_FOR_HABITS['meeting']} –∫–≤–∞–Ω—Ç–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
        return ConversationHandler.END
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_meeting_confirmation: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_call(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        user = get_user(session, user_id)
        
        if not user:
            user = create_user(session, user_id, update.effective_user.username, 
                              update.effective_user.first_name, update.effective_user.last_name)
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–æ –∑–≤–æ–Ω–∫–∞–º–∏
        await update.message.reply_text(
            "üìû –ó–≤–æ–Ω–∫–∏ –∏ –≤—Å—Ç—Ä–µ—á–∏ —Å –ª—é–¥—å–º–∏\n\n"
            "–° –∫–µ–º –≤—ã –ø–æ–æ–±—â–∞–ª–∏—Å—å —Å–µ–≥–æ–¥–Ω—è?",
            reply_markup=ReplyKeyboardMarkup([["‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–≤–æ–Ω–æ–∫"]], one_time_keyboard=True)
        )
        
        return AWAITING_CALL_CONFIRMATION
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_call: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def handle_call_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session = get_db_session()
    try:
        user_id = update.effective_user.id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_user_progress(session, user_id, 'call')
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –∫–≤–∞–Ω—Ç—ã
        update_user_quantum(session, user_id, QUANTUMS_FOR_HABITS['call'])
        
        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ! +{QUANTUMS_FOR_HABITS['call']} –∫–≤–∞–Ω—Ç–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
        return ConversationHandler.END
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_call_confirmation: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–≤–æ–Ω–∫–∞.")
        return ConversationHandler.END
    finally:
        session.close()

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.', reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END